exposure:
  heat_tmax_delta:
    direction: higher_is_worse
    weight: 0.5
  heatwave_days:
    direction: higher_is_worse
    weight: 0.5
  drought_spei:
    direction: lower_is_worse
    weight: 1.0

sensitivity:
  tourism_gdp_share:
    direction: higher_is_worse
    weight: 0.6
  seasonality_idx:
    direction: higher_is_worse
    weight: 0.4

adaptive_capacity:
  readiness_proxy:
    direction: higher_is_better
    weight: 1.0

pillars:
  alpha: 0.45
  beta: 0.35
  gamma: 0.20

priority_rule:
  tourism_gdp_share_gt: 0.50
  projected_drop_gt: 0.20

# --------------------------------------------------------------------
# Legacy social-signal scoring configuration
# --------------------------------------------------------------------

# Indicator configuration for CRISI scoring with social signals.
# Weights sum to 1.0. Benefit flags indicate whether higher values
# improve the score.

horizons: [5, 10, 15, 20, 25, 30]

weights:
  arrivals_per_capita: 0.15
  seasonality_index:   0.10
  climate_risk:        0.15
  infra_score:         0.15
  income_dependency:   0.05
  unemployment_rate:   0.05
  buzz_volume:         0.05
  sentiment_mean:      0.05
  sentiment_vol:       0.05
  engagement_rate:     0.05
  influencer_share:    0.05
  review_mean:         0.05
  review_std:          0.05
  buzz_seasonality:    0.05

benefit:
  arrivals_per_capita: true
  seasonality_index:   false
  climate_risk:        false
  infra_score:         true
  income_dependency:   false
  unemployment_rate:   false
  buzz_volume:         false
  sentiment_mean:      true
  sentiment_vol:       false
  engagement_rate:     true
  influencer_share:    true
  review_mean:         true
  review_std:          false
  buzz_seasonality:    false

scenarios:
  baseline:
    type: baseline
    weights_override: {}

  rcp45:
    type: rcp
    climate_multiplier_per_10y: 0.95
    weights_override: {}

  rcp85:
    type: rcp
    climate_multiplier_per_10y: 1.15
    weights_override: {}

  strict_strict:
    type: foresight
    regulation: strict
    technology: strict
    weights_override: {}

  easy_easy:
    type: foresight
    regulation: easy
    technology: easy
    weights_override: {}

  strict_easy:
    type: foresight
    regulation: strict
    technology: easy
    weights_override: {}

  easy_strict:
    type: foresight
    regulation: easy
    technology: strict
    weights_override: {}
